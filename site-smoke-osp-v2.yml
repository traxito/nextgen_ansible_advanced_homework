---
#- hosts: workstation
#  gather_facts: false
#  tasks:
########################################################
- name: Collect info from Openstack servers and use inmemory inventory to install Multi-tier app
  hosts: localhost
  gather_facts: false
  connection: local
  tasks:
    - name: Gather information from Openstack hosts
      os_server_info:
        cloud: openstack
      register: result
    - name: Add the host to inmemory
      add_host:
        hostname: "{{ item.name }}"
        groups: "{{ item.metadata.group }}"
      loop: "{{ result.openstack_servers }}"
########################################################
#- name: OpenStack servers check
#  hosts: "{{ result.openstack_servers }}"
#  gather_facts: false
#  tasks:
#    - name: Port 22 check alive
#      wait_for:
#        host: "{{ item.private_v4 }}"
#        port: 22
#        delay: 2
#        timeout: 60
#      loop: "{{ result.openstack_servers }}"
#      delegate_to: localhost
#################################################################

#    - name: Ping servers
#      hosts: "{{ item.private_v4 }}"
#      shell: sudo ping -c 1 -w 2 {{ item.private_v4 }}
#        host: "{{ item.private_v4 }}"
#        retries: 20
#        delay: 2
#        timeout: 60
#      loop: "{{ result.openstack_servers }}"
#      delegate_to: localhost


##################################################################
#- name: Curl website
#  hosts: "{{ result.openstack_servers.apps }}"
#  become: false
#  gather_facts: true
#  tasks:
    - name: Check webservers
#      host: "{{ item.name }}"
      uri:
        url: "http://{{ result.openstack_servers.apps.public_v4 }}"
        return_content: yes
      until: '"alive" in webpage.content'
      retries: 10
      delay: 1
      register: webpage
      loop: "{{ result.openstack_servers.apps }}"
      delegate_to: localhost
    
    - name: Fail if 'Ansible has done its job' is not in the page content
#  hosts: apps
#  gather_facts: false
#  become: false
      fail:
#      msg: 'Service seems to be down'
      when: "'Ansible has done its job' not in webpage.results[0].content"
#      tags:
#        - osp.smoke
